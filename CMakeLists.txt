cmake_minimum_required(VERSION 3.20)

set(BUILD_VERSION 0.2.0.0)
project(slick_logger VERSION ${BUILD_VERSION} LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

include(FetchContent)

# Disable tests for slick_queue
set(BUILD_SLICK_QUEUE_TESTS OFF CACHE BOOL "" FORCE)
FetchContent_Declare(
    slick_queue
    GIT_REPOSITORY https://github.com/SlickQuant/slick_queue.git
    GIT_TAG v1.0.1.1
)
FetchContent_MakeAvailable(slick_queue)

set(WARNING_MESSAGE "// ********** THIS FILE IS AUTO-GENERATED FROM src/logger.hpp **********
// ********** DO NOT EDIT THIS FILE DIRECTLY                  **********
// ********** EDIT src/logger.hpp AND RE-RUN CMAKE TO UPDATE  **********")
configure_file(src/logger.hpp ${CMAKE_CURRENT_SOURCE_DIR}/include/slick_logger/logger.hpp)

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

if (CMAKE_BUILD_TYPE MATCHES Debug)
    add_definitions(-DDEBUG)
endif()

if (CMAKE_BUILD_TYPE MATCHES Release)
    add_definitions(-DNDEBUG)
endif()

# Add header-only library
add_library(slick_logger INTERFACE)
target_include_directories(slick_logger INTERFACE 
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)
target_link_libraries(slick_logger INTERFACE slick_queue)

if (MSVC)
    set(CMAKE_CXX_FLAGS_RELEASE "-O2")
    add_definitions(-D_WIN32_WINNT=0x0A00)
    set(CMAKE_SUPPRESS_REGENERATION true)   # supress zero_check
else()
    set(CMAKE_CXX_FLAGS_RELEASE "-O3 -march=native -flto")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -O0 -fsanitize=address,undefined -fno-omit-frame-pointer")
    set(CMAKE_EXE_LINKER_FLAGS_DEBUG "-fsanitize=address,undefined")
endif()

# Add tests (placeholder)
enable_testing()
add_subdirectory(tests)

# Add examples (placeholder)
add_subdirectory(examples)

# Add benchmarks (optional)
option(BUILD_SLICK_LOGGER_BENCHMARKS "Build performance benchmarks" OFF)
if(BUILD_SLICK_LOGGER_BENCHMARKS AND CMAKE_BUILD_TYPE MATCHES Release)
    add_subdirectory(benchmarks)
endif()

# Installation rules
install(DIRECTORY include/ DESTINATION include)

if(CMAKE_BUILD_TYPE STREQUAL "Release")
    add_custom_target(dist_slick_logger ALL
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_BINARY_DIR}/dist/include
        WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/dist
        COMMENT "Copying slick_logger headers to dist/include"
        VERBATIM
    )

    if (PROJECT_IS_TOP_LEVEL)
        add_custom_target(package_slick_logger ALL
            COMMAND ${CMAKE_COMMAND} -E tar "cfv" "${CMAKE_BINARY_DIR}/dist/slick_logger_${BUILD_VERSION}.zip" --format=zip "include"
            WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/dist"
            COMMENT "Creating zip archive"
        )

        add_dependencies(package_slick_logger dist_slick_logger)
    endif()
endif()